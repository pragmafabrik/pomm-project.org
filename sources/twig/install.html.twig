{% extends "layout.html.twig" %}

{% block title %}howto |Â install Pomm{% endblock %}
{% block title_baseline %}Installing Pomm 1.x{% endblock %}
{% block content %}
<div class="container">
        <div class="row">
          <div class="col-md-12">
                <p>For each version's minimum requirements, please check the <a href="{{ app.url_generator.generate("main_download") }}">download</a> page.</p>
                <h3>The easy way: composer</h3>
                <p>If, like us, you love composer, you can have a look at <a href="https://packagist.org/packages/pomm/pomm">Pomm's packagist page</a>. Basically, installing Pomm in an existing project will be as simple as adding the following line to your <code>composer.json</code> file in the <code>require</code> section:
                <pre class="vim"><span class="String">&quot;pomm/pomm&quot;:&quot;1.2.*&quot;</span></pre></p>
                <p>If you are starting a stand alone project from scratch, here is the complete <code>composer.json</code> file:</p>
                <pre class="vim">
<span class="lnr">1 </span><span class="Function">{</span>
<span class="lnr">2 </span>    <span class="String">&quot;require&quot;</span>: <span class="Function">{</span>
<span class="lnr">3 </span>        <span class="String">&quot;pomm/pomm&quot;</span>: <span class="String">&quot;1.2.*&quot;</span>
<span class="lnr">4 </span>    <span class="Function">}</span>
<span class="lnr">5 </span><span class="Function">}</span></pre>
                <p>Now, just invoke composer:</p>
                <pre class="vim">$ composer.phar install</pre>
                <p>and it will download the latest 1.2 version of Pomm and set a class autoloader for your project. The last thing you have to do is to include composer's autoload file and you can use Pomm right awyay</p>
                <pre class='vim'>
<span class="lnr">1 </span><span class="Special">&lt;?php</span>
<span class="lnr">2 </span>
<span class="lnr">3 </span><span class="Include">require</span> <span class="Constant">__DIR__</span><span class="Operator">.</span>&quot;<span class="String">/vendor/autoload.php</span>&quot;;
<span class="lnr">4 </span>
<span class="lnr">5 </span><span class="Operator">$</span><span class="Identifier">database</span> <span class="Operator">=</span> <span class="Define">new</span> \Pomm\Connection\Database<span class="Special">(</span><span class="Type">array</span><span class="Special">(</span>
<span class="lnr">6 </span>    '<span class="String">dsn</span>' <span class="Operator">=</span><span class="Operator">&gt;</span> '<span class="String">pgsql://user:password@host/db_name</span>',
<span class="lnr">7 </span>    '<span class="String">name</span>' <span class="Operator">=</span><span class="Operator">&gt;</span> '<span class="String">my_project</span>'
<span class="lnr">8 </span><span class="Special">))</span>;</pre>
              <h3>Manual installation</h3>
              <p>If for some reasons you cannot use composer, you have to install Pomm manually. Just download it and save it in a directory. If no autoload mechanism is available, you will have to provide one: <strong>Pomm needs an autoloading system</strong>. Here is one:</p>
              <pre class="vim">
<span class="lnr"> 1 </span>spl_autoload_register<span class="Special">(</span><span class="Define">function</span> <span class="Special">(</span><span class="Operator">$</span><span class="Identifier">class</span><span class="Special">)</span> <span class="Special">{</span>
<span class="lnr"> 2 </span>    <span class="Statement">if</span> <span class="Special">(</span><span class="Number">0</span> <span class="Statement">===</span> <span class="Function">strpos</span><span class="Special">(</span><span class="Operator">$</span><span class="Identifier">class</span>, '<span class="String">Pomm</span><span class="Special">\\</span>'<span class="Special">))</span> <span class="Special">{</span>
<span class="lnr"> 3 </span>        <span class="Operator">$</span><span class="Identifier">class</span> <span class="Operator">=</span> <span class="Function">str_replace</span><span class="Special">(</span>'<span class="Special">\\</span>', '<span class="String">/</span>', <span class="Operator">$</span><span class="Identifier">class</span><span class="Special">)</span>;
<span class="lnr"> 4 </span>        <span class="Include">require</span> <span class="Function">sprintf</span><span class="Special">(</span>&quot;<span class="String">%s/%s.php</span>&quot;, <span class="Constant">__DIR__</span>, <span class="Operator">$</span><span class="Identifier">class</span><span class="Special">)</span>;
<span class="lnr"> 5 </span><span class="Special">}</span></pre>
          </div>
        </div><!-- row -->
</div>
{% endblock %}
